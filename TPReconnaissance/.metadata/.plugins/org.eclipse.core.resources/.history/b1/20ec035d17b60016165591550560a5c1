import java.util.Vector;

import javafx.geometry.Point2D;

public class DTW {
	Vector<Point2D> userGesture;
	
	public DTW (Vector<Point2D> userGesture){
		this.userGesture = userGesture;
	}

	public String detectGesture() {
		// TODO Auto-generated method stub
		return "bien maggle";
	}
	
	public Matrix calculDtw(Vector<Point2D> gestureY){
		int n = userGesture.size();
		int m = gestureY.size();
		Matrix dtw = new Matrix(n, m);
		dtw.items[0][0] = 0;
		for(int i = 1; i<n; i++){
			dtw.items[i][0] = dtw.items[i-1][0] + dist(userGesture.get(i), gestureY.get(0));
		}
		
		for(int j = 1; j<m; j++){
			dtw.items[0][j] = dtw.items[0][j-1] + dist(userGesture.get(0), gestureY.get(j));
		}
		
		for(int i = 1; i<=n; i++){
			for(int j = 1; j<=m; j++){
				dtw.items[i][j] =dist(userGesture.get(i), gestureY.get(j)) + Math.min(dtw.items[i-1][j], Math.min(dtw.items[i][j-1], dtw.items[i-1][j-1]));
			}
		}
		
		
		
		return dtw;
	}
	
	public double dist(Point2D a, Point2D b){
		return Math.sqrt(Math.pow(a.getX() - b.getX(), 2) + Math.pow(a.getY() - b.getY(), 2));
	}
	
	
}
